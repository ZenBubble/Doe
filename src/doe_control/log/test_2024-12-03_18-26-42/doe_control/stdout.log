UpdateCTestConfiguration  from :/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/CTestConfiguration.ini
Parse Config file:/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/CTestConfiguration.ini
   Site: dorson-AORUS-5-SE
   Build name: (empty)
 Add coverage exclude regular expressions.
Create new tag: 20241204-0226 - Experimental
UpdateCTestConfiguration  from :/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/CTestConfiguration.ini
Parse Config file:/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/CTestConfiguration.ini
Test project /home/dorson/Documents/github/Doe/src/doe_control/build/doe_control
Constructing a list of tests
Done constructing a list of tests
Updating test list for fixtures
Added 0 tests to meet fixture requirements
Checking test dependency graph...
Checking test dependency graph end
test 1
    Start 1: cppcheck

1: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/cppcheck.xunit.xml" "--package-name" "doe_control" "--output-file" "/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/ament_cppcheck/cppcheck.txt" "--command" "/opt/ros/jazzy/bin/ament_cppcheck" "--xunit-file" "/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/cppcheck.xunit.xml" "--include_dirs" "/home/dorson/Documents/github/Doe/src/doe_control/include"
1: Working Directory: /home/dorson/Documents/github/Doe/src/doe_control
1: Test timeout computed to be: 300
1: -- run_test.py: invoking following command in '/home/dorson/Documents/github/Doe/src/doe_control':
1:  - /opt/ros/jazzy/bin/ament_cppcheck --xunit-file /home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/cppcheck.xunit.xml --include_dirs /home/dorson/Documents/github/Doe/src/doe_control/include
1: cppcheck 2.13.0 has known performance issues and therefore will not be used, set the AMENT_CPPCHECK_ALLOW_SLOW_VERSIONS environment variable to override this.
1: -- run_test.py: return code 0
1: -- run_test.py: verify result file '/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/cppcheck.xunit.xml'
1/6 Test #1: cppcheck .........................   Passed    0.14 sec
test 2
    Start 2: flake8

2: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/flake8.xunit.xml" "--package-name" "doe_control" "--output-file" "/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/ament_flake8/flake8.txt" "--command" "/opt/ros/jazzy/bin/ament_flake8" "--xunit-file" "/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/flake8.xunit.xml"
2: Working Directory: /home/dorson/Documents/github/Doe/src/doe_control
2: Test timeout computed to be: 60
2: -- run_test.py: invoking following command in '/home/dorson/Documents/github/Doe/src/doe_control':
2:  - /opt/ros/jazzy/bin/ament_flake8 --xunit-file /home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/flake8.xunit.xml
2: 
2: 2 files checked
2: No problems found
2: 
2: Checked files:
2: 
2: * ./install/_local_setup_util_ps1.py
2: * ./install/_local_setup_util_sh.py
2: -- run_test.py: return code 0
2: -- run_test.py: verify result file '/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/flake8.xunit.xml'
2/6 Test #2: flake8 ...........................   Passed    0.29 sec
test 3
    Start 3: lint_cmake

3: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/lint_cmake.xunit.xml" "--package-name" "doe_control" "--output-file" "/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/jazzy/bin/ament_lint_cmake" "--xunit-file" "/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/lint_cmake.xunit.xml"
3: Working Directory: /home/dorson/Documents/github/Doe/src/doe_control
3: Test timeout computed to be: 60
3: -- run_test.py: invoking following command in '/home/dorson/Documents/github/Doe/src/doe_control':
3:  - /opt/ros/jazzy/bin/ament_lint_cmake --xunit-file /home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/lint_cmake.xunit.xml
3: 
3: No problems found
3: -- run_test.py: return code 0
3: -- run_test.py: verify result file '/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/lint_cmake.xunit.xml'
3/6 Test #3: lint_cmake .......................   Passed    0.12 sec
test 4
    Start 4: pep257

4: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/pep257.xunit.xml" "--package-name" "doe_control" "--output-file" "/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/ament_pep257/pep257.txt" "--command" "/opt/ros/jazzy/bin/ament_pep257" "--xunit-file" "/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/pep257.xunit.xml"
4: Working Directory: /home/dorson/Documents/github/Doe/src/doe_control
4: Test timeout computed to be: 60
4: -- run_test.py: invoking following command in '/home/dorson/Documents/github/Doe/src/doe_control':
4:  - /opt/ros/jazzy/bin/ament_pep257 --xunit-file /home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/pep257.xunit.xml
4: checking ./install/_local_setup_util_ps1.py
4: checking ./install/_local_setup_util_sh.py
4: No problems found
4: -- run_test.py: return code 0
4: -- run_test.py: verify result file '/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/pep257.xunit.xml'
4/6 Test #4: pep257 ...........................   Passed    0.18 sec
test 5
    Start 5: uncrustify

5: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/uncrustify.xunit.xml" "--package-name" "doe_control" "--output-file" "/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/ament_uncrustify/uncrustify.txt" "--command" "/opt/ros/jazzy/bin/ament_uncrustify" "--xunit-file" "/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/uncrustify.xunit.xml"
5: Working Directory: /home/dorson/Documents/github/Doe/src/doe_control
5: Test timeout computed to be: 60
5: -- run_test.py: invoking following command in '/home/dorson/Documents/github/Doe/src/doe_control':
5:  - /opt/ros/jazzy/bin/ament_uncrustify --xunit-file /home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/uncrustify.xunit.xml
5: Code style divergence in file 'include/doe_control/thrust_publisher.hpp':
5: 
5: --- include/doe_control/thrust_publisher.hpp
5: +++ include/doe_control/thrust_publisher.hpp.uncrustify
5: @@ -17,2 +17,2 @@
5: -    class ThrustPublisher: public rclcpp::Node
5: -    {
5: +class ThrustPublisher : public rclcpp::Node
5: +{
5: @@ -20,2 +20 @@
5: -    public:
5: -
5: +public:
5: @@ -29 +28 @@
5: -        explicit ThrustPublisher(const rclcpp::NodeOptions & options);
5: +  explicit ThrustPublisher(const rclcpp::NodeOptions & options);
5: @@ -31,2 +30 @@
5: -    private:
5: -
5: +private:
5: @@ -43 +41 @@
5: -        void wrenchCallback(const geometry_msgs::msg::Wrench::SharedPtr msg) const;
5: +  void wrenchCallback(const geometry_msgs::msg::Wrench::SharedPtr msg) const;
5: @@ -51 +49 @@
5: -        std::vector<double> cross(std::vector<double> r,std::vector<double> F);
5: +  std::vector<double> cross(std::vector<double> r, std::vector<double> F);
5: @@ -58 +56 @@
5: -        std::vector<std::vector<double>> createAllocMat();
5: +  std::vector<std::vector<double>> createAllocMat();
5: @@ -67 +65 @@
5: -        uint32_t forceToLevel(double force) const;
5: +  uint32_t forceToLevel(double force) const;
5: @@ -69,2 +67,2 @@
5: -        rclcpp::Publisher<std_msgs::msg::Float64MultiArray>::SharedPtr forces_pub_;
5: -        rclcpp::Publisher<std_msgs::msg::UInt32>::SharedPtr signals_pub_;
5: +  rclcpp::Publisher<std_msgs::msg::Float64MultiArray>::SharedPtr forces_pub_;
5: +  rclcpp::Publisher<std_msgs::msg::UInt32>::SharedPtr signals_pub_;
5: @@ -72 +70 @@
5: -        rclcpp::Subscription<geometry_msgs::msg::Wrench>::SharedPtr forces_sub_;
5: +  rclcpp::Subscription<geometry_msgs::msg::Wrench>::SharedPtr forces_sub_;
5: @@ -74 +72 @@
5: -        cv::Mat pinv_alloc_;
5: +  cv::Mat pinv_alloc_;
5: @@ -76,12 +74,12 @@
5: -        int num_thrusters_ = 0;
5: -        int bits_per_thruster_ = 0;
5: -        int encode_levels_ = 0;
5: -        double max_fwd_ = 0;
5: -        double max_rev_ = 0;
5: -        std::vector<double> x_lens_;
5: -        std::vector<double> y_lens_;
5: -        std::vector<double> z_lens_;
5: -        std::vector<double> x_contribs_;
5: -        std::vector<double> y_contribs_;
5: -        std::vector<double> z_contribs_;
5: -    };
5: +  int num_thrusters_ = 0;
5: +  int bits_per_thruster_ = 0;
5: +  int encode_levels_ = 0;
5: +  double max_fwd_ = 0;
5: +  double max_rev_ = 0;
5: +  std::vector<double> x_lens_;
5: +  std::vector<double> y_lens_;
5: +  std::vector<double> z_lens_;
5: +  std::vector<double> x_contribs_;
5: +  std::vector<double> y_contribs_;
5: +  std::vector<double> z_contribs_;
5: +};
5: 
5: Code style divergence in file 'src/thrust_publisher.cpp':
5: 
5: --- src/thrust_publisher.cpp
5: +++ src/thrust_publisher.cpp.uncrustify
5: @@ -7,2 +7,2 @@
5: -    ThrustPublisher::ThrustPublisher(const rclcpp::NodeOptions & options) :
5: -    Node ("thrust_publisher", options),
5: +ThrustPublisher::ThrustPublisher(const rclcpp::NodeOptions & options)
5: +:Node ("thrust_publisher", options),
5: @@ -10,3 +10,3 @@
5: -        x_lens_ (SUPPORTED_THRUSTERS, 0),
5: -        y_lens_ (SUPPORTED_THRUSTERS, 0),
5: -        z_lens_ (SUPPORTED_THRUSTERS, 0),
5: +  x_lens_ (SUPPORTED_THRUSTERS, 0),
5: +  y_lens_ (SUPPORTED_THRUSTERS, 0),
5: +  z_lens_ (SUPPORTED_THRUSTERS, 0),
5: @@ -14,9 +14,9 @@
5: -        x_contribs_ (SUPPORTED_THRUSTERS, 0),
5: -        y_contribs_ (SUPPORTED_THRUSTERS, 0),
5: -        z_contribs_ (SUPPORTED_THRUSTERS, 0)
5: -    {
5: -        this->declare_parameter<int>("num_thrusters", num_thrusters_);
5: -        if (num_thrusters_ > SUPPORTED_THRUSTERS)
5: -        {
5: -            RCLCPP_ERROR(this->get_logger(), "Number of thrusters is greater than supported thruster count");
5: -        }
5: +  x_contribs_ (SUPPORTED_THRUSTERS, 0),
5: +  y_contribs_ (SUPPORTED_THRUSTERS, 0),
5: +  z_contribs_ (SUPPORTED_THRUSTERS, 0)
5: +{
5: +  this->declare_parameter<int>("num_thrusters", num_thrusters_);
5: +  if (num_thrusters_ > SUPPORTED_THRUSTERS) {
5: +    RCLCPP_ERROR(this->get_logger(),
5: +        "Number of thrusters is greater than supported thruster count");
5: +  }
5: @@ -24,2 +24,2 @@
5: -        this->declare_parameter<int>("bits_per_thruster", bits_per_thruster_);
5: -        this->get_parameter("bits_per_thruster", bits_per_thruster_);
5: +  this->declare_parameter<int>("bits_per_thruster", bits_per_thruster_);
5: +  this->get_parameter("bits_per_thruster", bits_per_thruster_);
5: @@ -27,6 +27,6 @@
5: -        this->declare_parameter<double>("max_fwd", max_fwd_);
5: -        this->get_parameter("max_fwd", max_fwd_);
5: -        max_fwd_ *= 9.807; // kgf to N
5: -        this->declare_parameter<double>("max_rev", max_rev_);
5: -        max_rev_ *= 9.807; // kgf to N
5: -        this->get_parameter("max_rev", max_rev_);
5: +  this->declare_parameter<double>("max_fwd", max_fwd_);
5: +  this->get_parameter("max_fwd", max_fwd_);
5: +  max_fwd_ *= 9.807;       // kgf to N
5: +  this->declare_parameter<double>("max_rev", max_rev_);
5: +  max_rev_ *= 9.807;       // kgf to N
5: +  this->get_parameter("max_rev", max_rev_);
5: @@ -34 +34 @@
5: -        encode_levels_ = pow(2,bits_per_thruster_);
5: +  encode_levels_ = pow(2, bits_per_thruster_);
5: @@ -36 +36,2 @@
5: -        std::string names[SUPPORTED_THRUSTERS] = {"thruster1", "thruster2", "thruster3", "thruster4", "thruster5", "thruster6", "thruster8", "thruster9", "thruster10"};
5: +  std::string names[SUPPORTED_THRUSTERS] = {"thruster1", "thruster2", "thruster3", "thruster4",
5: +    "thruster5", "thruster6", "thruster8", "thruster9", "thruster10"};
5: @@ -38,8 +39,7 @@
5: -        for (int i = 0; i < SUPPORTED_THRUSTERS; i++)
5: -        {
5: -            this->declare_parameter(names[i]+".contrib.x", x_contribs_[i]);
5: -            this->declare_parameter(names[i]+".contrib.y", y_contribs_[i]);
5: -            this->declare_parameter(names[i]+".contrib.z", z_contribs_[i]);
5: -            this->declare_parameter(names[i]+".lx", x_lens_[i]);
5: -            this->declare_parameter(names[i]+".ly", y_lens_[i]);
5: -            this->declare_parameter(names[i]+".lz", z_lens_[i]);
5: +  for (int i = 0; i < SUPPORTED_THRUSTERS; i++) {
5: +    this->declare_parameter(names[i] + ".contrib.x", x_contribs_[i]);
5: +    this->declare_parameter(names[i] + ".contrib.y", y_contribs_[i]);
5: +    this->declare_parameter(names[i] + ".contrib.z", z_contribs_[i]);
5: +    this->declare_parameter(names[i] + ".lx", x_lens_[i]);
5: +    this->declare_parameter(names[i] + ".ly", y_lens_[i]);
5: +    this->declare_parameter(names[i] + ".lz", z_lens_[i]);
5: @@ -47,8 +47,8 @@
5: -            this->get_parameter(names[i]+".contrib.x", x_contribs_[i]);
5: -            this->get_parameter(names[i]+".contrib.y", y_contribs_[i]);
5: -            this->get_parameter(names[i]+".contrib.z", z_contribs_[i]);
5: -            this->get_parameter(names[i]+".lx", x_lens_[i]);
5: -            this->get_parameter(names[i]+".ly", y_lens_[i]);
5: -            this->get_parameter(names[i]+".lz", z_lens_[i]);
5: -        }
5: -        std::vector<std::vector<double>> alloc_vec =  createAllocMat();
5: +    this->get_parameter(names[i] + ".contrib.x", x_contribs_[i]);
5: +    this->get_parameter(names[i] + ".contrib.y", y_contribs_[i]);
5: +    this->get_parameter(names[i] + ".contrib.z", z_contribs_[i]);
5: +    this->get_parameter(names[i] + ".lx", x_lens_[i]);
5: +    this->get_parameter(names[i] + ".ly", y_lens_[i]);
5: +    this->get_parameter(names[i] + ".lz", z_lens_[i]);
5: +  }
5: +  std::vector<std::vector<double>> alloc_vec = createAllocMat();
5: @@ -56,4 +56,6 @@
5: -        cv::Mat alloc_mat (alloc_vec.size(), alloc_vec[0].size(), CV_64FC1);
5: -        for (int i = 0; i < alloc_mat.rows; i++)
5: -            for (int j = 0; j < alloc_mat.cols; j++)
5: -                alloc_mat.at<double>(i,j) = alloc_vec[i][j];
5: +  cv::Mat alloc_mat (alloc_vec.size(), alloc_vec[0].size(), CV_64FC1);
5: +  for (int i = 0; i < alloc_mat.rows; i++) {
5: +    for (int j = 0; j < alloc_mat.cols; j++) {
5: +      alloc_mat.at<double>(i, j) = alloc_vec[i][j];
5: +    }
5: +  }
5: @@ -64 +66 @@
5: -        cv::invert(alloc_mat, pinv_alloc_, cv::DECOMP_SVD);
5: +  cv::invert(alloc_mat, pinv_alloc_, cv::DECOMP_SVD);
5: @@ -66 +68 @@
5: -        forces_pub_ = this->create_publisher<std_msgs::msg::Float64MultiArray>("output_forces", 10);
5: +  forces_pub_ = this->create_publisher<std_msgs::msg::Float64MultiArray>("output_forces", 10);
5: @@ -68 +70 @@
5: -        signals_pub_ = this->create_publisher<std_msgs::msg::UInt32>("signals", 10);
5: +  signals_pub_ = this->create_publisher<std_msgs::msg::UInt32>("signals", 10);
5: @@ -70 +72,2 @@
5: -        forces_sub_ = this->create_subscription<geometry_msgs::msg::Wrench>("input_forces", 10, std::bind(&ThrustPublisher::wrenchCallback, this, _1));
5: +  forces_sub_ = this->create_subscription<geometry_msgs::msg::Wrench>("input_forces", 10,
5: +      std::bind(&ThrustPublisher::wrenchCallback, this, _1));
5: @@ -72 +75 @@
5: -        RCLCPP_INFO(this->get_logger(), "Thrust Allocator succesfully started!");
5: +  RCLCPP_INFO(this->get_logger(), "Thrust Allocator succesfully started!");
5: @@ -74 +77 @@
5: -    }
5: +}
5: @@ -77,7 +80,7 @@
5: -    void ThrustPublisher::wrenchCallback(const geometry_msgs::msg::Wrench::SharedPtr msg) const
5: -    {
5: -        double tau_arr[6] =
5: -        {
5: -            msg->force.x, msg->force.y, msg->force.z,
5: -            msg->torque.x, msg->torque.y, msg->torque.z,
5: -        };
5: +void ThrustPublisher::wrenchCallback(const geometry_msgs::msg::Wrench::SharedPtr msg) const
5: +{
5: +  double tau_arr[6] =
5: +  {
5: +    msg->force.x, msg->force.y, msg->force.z,
5: +    msg->torque.x, msg->torque.y, msg->torque.z,
5: +  };
5: @@ -85,3 +88,4 @@
5: -        cv::Mat tau_mat (6, 1, CV_64F);
5: -        for (int i = 0; i < 6; i++)
5: -            tau_mat.at<double>(i, 0) = tau_arr[i];
5: +  cv::Mat tau_mat (6, 1, CV_64F);
5: +  for (int i = 0; i < 6; i++) {
5: +    tau_mat.at<double>(i, 0) = tau_arr[i];
5: +  }
5: @@ -89 +93 @@
5: -        cv::Mat thrust_mat =  pinv_alloc_*tau_mat;
5: +  cv::Mat thrust_mat = pinv_alloc_ * tau_mat;
5: @@ -91,6 +95,5 @@
5: -        std::vector<double> thrust;
5: -        uint32_t signal = 0;
5: -        for (int i = 0; i < num_thrusters_ ; i++)
5: -        {
5: -            double thruster_thrust = thrust_mat.at<double>(i,0);
5: -            thrust.push_back(thruster_thrust);
5: +  std::vector<double> thrust;
5: +  uint32_t signal = 0;
5: +  for (int i = 0; i < num_thrusters_ ; i++) {
5: +    double thruster_thrust = thrust_mat.at<double>(i, 0);
5: +    thrust.push_back(thruster_thrust);
5: @@ -98,2 +101,2 @@
5: -            uint32_t t_level = forceToLevel(thruster_thrust);
5: -            uint32_t t_bits = t_level << (bits_per_thruster_ * i);
5: +    uint32_t t_level = forceToLevel(thruster_thrust);
5: +    uint32_t t_bits = t_level << (bits_per_thruster_ * i);
5: @@ -101,2 +104,2 @@
5: -            signal |= t_bits;
5: -        }
5: +    signal |= t_bits;
5: +  }
5: @@ -105 +108 @@
5: -        signal |= 0b10101010000000000000000000000000;
5: +  signal |= 0b10101010000000000000000000000000;
5: @@ -108,6 +111,31 @@
5: -        auto forces_msg = std_msgs::msg::Float64MultiArray();
5: -        forces_msg.data = thrust;
5: -        forces_pub_->publish(forces_msg);
5: -        auto signal_msg = std_msgs::msg::UInt32();
5: -        signal_msg.data = signal;
5: -        signals_pub_->publish(signal_msg);
5: +  auto forces_msg = std_msgs::msg::Float64MultiArray();
5: +  forces_msg.data = thrust;
5: +  forces_pub_->publish(forces_msg);
5: +  auto signal_msg = std_msgs::msg::UInt32();
5: +  signal_msg.data = signal;
5: +  signals_pub_->publish(signal_msg);
5: +}
5: +
5: +std::vector<double> ThrustPublisher::cross(std::vector<double> r, std::vector<double> F)
5: +{
5: +  std::vector<double> tau;
5: +  tau.push_back(r[1] * F[2] - r[2] * F[1]);
5: +  tau.push_back(r[2] * F[0] - r[0] * F[2]);
5: +  tau.push_back(r[0] * F[1] - r[1] * F[0]);
5: +  return tau;
5: +}
5: +
5: +std::vector<std::vector<double>> ThrustPublisher::createAllocMat()
5: +{
5: +  std::vector<std::vector<double>> alloc_mat;
5: +  for (int i = 0; i < num_thrusters_; i++) {
5: +    std::vector<double> F = {x_contribs_[i], y_contribs_[i], z_contribs_[i]};
5: +    std::vector<double> r = {x_lens_[i], y_lens_[i], z_lens_[i]};
5: +    std::vector<double> tau = cross(r, F);
5: +    F.insert(F.end(), tau.begin(), tau.end());
5: +    alloc_mat.push_back(F);
5: +  }
5: +  std::vector<std::vector<double>> alloc_mat_trans(6, std::vector<double>(num_thrusters_));
5: +  for(int i = 0; i < num_thrusters_; ++i) {
5: +    for(int j = 0; j < 6; ++j) {
5: +      alloc_mat_trans[j][i] = alloc_mat[i][j];
5: @@ -114,0 +143,3 @@
5: +  }
5: +  return alloc_mat_trans;
5: +}
5: @@ -116,7 +147,17 @@
5: -    std::vector<double> ThrustPublisher::cross(std::vector<double> r,std::vector<double> F){
5: -        std::vector<double> tau;
5: -        tau.push_back(r[1]*F[2] - r[2]*F[1]);
5: -        tau.push_back(r[2]*F[0] - r[0]*F[2]);
5: -        tau.push_back(r[0]*F[1] - r[1]*F[0]);
5: -        return tau;
5: -    }
5: +uint32_t ThrustPublisher::forceToLevel(double force) const
5: +{
5: +  uint32_t t_level;
5: +  if (force < 0.1 && force > -0.1) {
5: +    force = 0;
5: +  }
5: +  if (force >= 0) {
5: +            // levels 0 to 15 (0 is no force)
5: +    t_level = (uint32_t) (std::ceil(std::min(force,
5: +        max_fwd_) / max_fwd_ * (encode_levels_ / 2 - 1)));
5: +        // turn to levels 16 to 31
5: +    t_level += encode_levels_ / 2;
5: +  } else {
5: +            // levels 0 to 16 (0 is max rev, 16 is no force)
5: +    t_level = (uint32_t) (16 - std::ceil(std::max(force,
5: +        -max_rev_) / -max_rev_ * (encode_levels_ / 2)));
5: +  }
5: @@ -124,42 +165,3 @@
5: -    std::vector<std::vector<double>> ThrustPublisher::createAllocMat(){
5: -        std::vector<std::vector<double>> alloc_mat;
5: -        for (int i = 0; i < num_thrusters_; i++){
5: -            std::vector<double> F = {x_contribs_[i], y_contribs_[i], z_contribs_[i]};
5: -            std::vector<double> r = {x_lens_[i], y_lens_[i], z_lens_[i]};
5: -            std::vector<double> tau = cross(r, F);
5: -            F.insert(F.end(), tau.begin(), tau.end());
5: -            alloc_mat.push_back(F);
5: -        }
5: -        std::vector<std::vector<double>> alloc_mat_trans(6, std::vector<double>(num_thrusters_));
5: -        for(int i = 0; i < num_thrusters_; ++i){
5: -            for(int j = 0; j < 6; ++j){
5: -                alloc_mat_trans[j][i]=alloc_mat[i][j];
5: -            }
5: -        }
5: -        return alloc_mat_trans;
5: -    }
5: -
5: -    uint32_t ThrustPublisher::forceToLevel(double force) const{
5: -        uint32_t t_level;
5: -        if (force < 0.1 && force > -0.1)
5: -        {
5: -            force = 0;
5: -        }
5: -        if (force >= 0)
5: -        {
5: -            // levels 0 to 15 (0 is no force)
5: -            t_level = (uint32_t) (std::ceil(std::min(force, max_fwd_) / max_fwd_ * (encode_levels_/2 - 1)));
5: -        // turn to levels 16 to 31
5: -        t_level += encode_levels_ / 2;
5: -        }
5: -        else
5: -        {
5: -            // levels 0 to 16 (0 is max rev, 16 is no force)
5: -        t_level = (uint32_t) (16 - std::ceil(std::max(force, -max_rev_) / -max_rev_ * (encode_levels_/2)));
5: -        }
5: -
5: -        t_level &= ((uint32_t)pow(2, bits_per_thruster_) - 1);
5: -        return t_level;
5: -    }
5: -
5: -
5: +  t_level &= ((uint32_t)pow(2, bits_per_thruster_) - 1);
5: +  return t_level;
5: +}
5: @@ -177 +179,2 @@
5: -  } catch (rclcpp::exceptions::RCLError const&){} // during testing sometimes throws error
5: +  } catch (rclcpp::exceptions::RCLError const &) {
5: +  }                                               // during testing sometimes throws error
5: @@ -180 +182,0 @@
5: -
5: 
5: 2 files with code style divergence
5: -- run_test.py: return code 1
5: -- run_test.py: verify result file '/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/uncrustify.xunit.xml'
5/6 Test #5: uncrustify .......................***Failed    0.15 sec
test 6
    Start 6: xmllint

6: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/xmllint.xunit.xml" "--package-name" "doe_control" "--output-file" "/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/ament_xmllint/xmllint.txt" "--command" "/opt/ros/jazzy/bin/ament_xmllint" "--xunit-file" "/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/xmllint.xunit.xml"
6: Working Directory: /home/dorson/Documents/github/Doe/src/doe_control
6: Test timeout computed to be: 60
6: -- run_test.py: invoking following command in '/home/dorson/Documents/github/Doe/src/doe_control':
6:  - /opt/ros/jazzy/bin/ament_xmllint --xunit-file /home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/xmllint.xunit.xml
6: File 'package.xml' is valid
6: 
6: File 'install/doe_control/share/doe_control/package.xml' is valid
6: 
6: No problems found
6: -- run_test.py: return code 0
6: -- run_test.py: verify result file '/home/dorson/Documents/github/Doe/src/doe_control/build/doe_control/test_results/doe_control/xmllint.xunit.xml'
6/6 Test #6: xmllint ..........................   Passed    0.45 sec

83% tests passed[0;0m, [0;31m1 tests failed[0;0m out of 6

Label Time Summary:
cppcheck      =   0.14 sec*proc (1 test)
flake8        =   0.29 sec*proc (1 test)
lint_cmake    =   0.12 sec*proc (1 test)
linter        =   1.32 sec*proc (6 tests)
pep257        =   0.18 sec*proc (1 test)
uncrustify    =   0.15 sec*proc (1 test)
xmllint       =   0.45 sec*proc (1 test)

Total Test time (real) =   1.32 sec

The following tests FAILED:
	[0;31m  5 - uncrustify (Failed)[0;0m
